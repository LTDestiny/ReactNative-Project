import React, { useState } from "react";
import {
  View,
  Text,
  ScrollView,
  TouchableOpacity,
  Switch,
  Alert,
  StyleSheet,
} from "react-native";
import { SafeAreaView } from "react-native-safe-area-context";
import { useNavigation } from "@react-navigation/native";
import { useAuth } from "../contexts/AuthContext";
import { COLORS, SIZES } from "../constants/theme";

export default function SettingsScreen() {
  const navigation = useNavigation();
  const { user } = useAuth();
  const [notifications, setNotifications] = useState(true);
  const [emailUpdates, setEmailUpdates] = useState(false);
  const [darkMode, setDarkMode] = useState(false);

  return (
    <SafeAreaView style={styles.safeArea} edges={["top"]}>
      <View style={styles.container}>
        <View style={styles.header}>
          <TouchableOpacity onPress={() => navigation.goBack()}>
            <Text style={styles.backButton}>‚Üê Quay l·∫°i</Text>
          </TouchableOpacity>
          <Text style={styles.headerTitle}>C√†i ƒë·∫∑t</Text>
        </View>

        <ScrollView style={styles.content} showsVerticalScrollIndicator={false}>
          {/* Account Section */}
          <View style={styles.section}>
            <Text style={styles.sectionTitle}>T√ÄI KHO·∫¢N</Text>
            
            <TouchableOpacity
              style={styles.settingItem}
              onPress={() =>
                Alert.alert("Th√¥ng tin c√° nh√¢n", "T√≠nh nƒÉng ƒëang ph√°t tri·ªÉn")
              }
            >
              <View style={styles.settingLeft}>
                <Text style={styles.settingIcon}>üë§</Text>
                <Text style={styles.settingText}>Th√¥ng tin c√° nh√¢n</Text>
              </View>
              <Text style={styles.settingArrow}>‚Ä∫</Text>
            </TouchableOpacity>

            <TouchableOpacity
              style={styles.settingItem}
              onPress={() =>
                Alert.alert("ƒê·ªïi m·∫≠t kh·∫©u", "T√≠nh nƒÉng ƒëang ph√°t tri·ªÉn")
              }
            >
              <View style={styles.settingLeft}>
                <Text style={styles.settingIcon}>üîí</Text>
                <Text style={styles.settingText}>ƒê·ªïi m·∫≠t kh·∫©u</Text>
              </View>
              <Text style={styles.settingArrow}>‚Ä∫</Text>
            </TouchableOpacity>
          </View>

          {/* Notifications Section */}
          <View style={styles.section}>
            <Text style={styles.sectionTitle}>TH√îNG B√ÅO</Text>
            
            <View style={styles.settingItem}>
              <View style={styles.settingLeft}>
                <Text style={styles.settingIcon}>üîî</Text>
                <Text style={styles.settingText}>Th√¥ng b√°o ƒë·∫©y</Text>
              </View>
              <Switch
                value={notifications}
                onValueChange={setNotifications}
                trackColor={{ false: COLORS.light, true: COLORS.accent }}
                thumbColor={notifications ? COLORS.primary : COLORS.gray}
              />
            </View>

            <View style={styles.settingItem}>
              <View style={styles.settingLeft}>
                <Text style={styles.settingIcon}>üìß</Text>
                <Text style={styles.settingText}>Email khuy·∫øn m√£i</Text>
              </View>
              <Switch
                value={emailUpdates}
                onValueChange={setEmailUpdates}
                trackColor={{ false: COLORS.light, true: COLORS.accent }}
                thumbColor={emailUpdates ? COLORS.primary : COLORS.gray}
              />
            </View>
          </View>

          {/* Appearance Section */}
          <View style={styles.section}>
            <Text style={styles.sectionTitle}>GIAO DI·ªÜN</Text>
            
            <View style={styles.settingItem}>
              <View style={styles.settingLeft}>
                <Text style={styles.settingIcon}>üåô</Text>
                <Text style={styles.settingText}>Ch·∫ø ƒë·ªô t·ªëi</Text>
              </View>
              <Switch
                value={darkMode}
                onValueChange={setDarkMode}
                trackColor={{ false: COLORS.light, true: COLORS.accent }}
                thumbColor={darkMode ? COLORS.primary : COLORS.gray}
              />
            </View>

            <TouchableOpacity
              style={styles.settingItem}
              onPress={() =>
                Alert.alert("Ng√¥n ng·ªØ", "Hi·ªán t·∫°i: Ti·∫øng Vi·ªát")
              }
            >
              <View style={styles.settingLeft}>
                <Text style={styles.settingIcon}>üåê</Text>
                <Text style={styles.settingText}>Ng√¥n ng·ªØ</Text>
              </View>
              <View style={styles.settingRight}>
                <Text style={styles.settingValue}>Ti·∫øng Vi·ªát</Text>
                <Text style={styles.settingArrow}>‚Ä∫</Text>
              </View>
            </TouchableOpacity>
          </View>

          {/* Support Section */}
          <View style={styles.section}>
            <Text style={styles.sectionTitle}>H·ªñ TR·ª¢</Text>
            
            <TouchableOpacity
              style={styles.settingItem}
              onPress={() =>
                Alert.alert("Tr·ª£ gi√∫p", "Email: support@cuahangcokh√≠.vn\nƒêi·ªán tho·∫°i: 1900-xxxx")
              }
            >
              <View style={styles.settingLeft}>
                <Text style={styles.settingIcon}>‚ùì</Text>
                <Text style={styles.settingText}>Trung t√¢m tr·ª£ gi√∫p</Text>
              </View>
              <Text style={styles.settingArrow}>‚Ä∫</Text>
            </TouchableOpacity>

            <TouchableOpacity
              style={styles.settingItem}
              onPress={() =>
                Alert.alert("V·ªÅ ch√∫ng t√¥i", "C·ª≠a h√†ng c∆° kh√≠\nPhi√™n b·∫£n 1.0.0")
              }
            >
              <View style={styles.settingLeft}>
                <Text style={styles.settingIcon}>‚ÑπÔ∏è</Text>
                <Text style={styles.settingText}>V·ªÅ ch√∫ng t√¥i</Text>
              </View>
              <Text style={styles.settingArrow}>‚Ä∫</Text>
            </TouchableOpacity>

            <TouchableOpacity
              style={styles.settingItem}
              onPress={() =>
                Alert.alert("ƒêi·ªÅu kho·∫£n", "T√≠nh nƒÉng ƒëang ph√°t tri·ªÉn")
              }
            >
              <View style={styles.settingLeft}>
                <Text style={styles.settingIcon}>üìú</Text>
                <Text style={styles.settingText}>ƒêi·ªÅu kho·∫£n & Ch√≠nh s√°ch</Text>
              </View>
              <Text style={styles.settingArrow}>‚Ä∫</Text>
            </TouchableOpacity>
          </View>

          {/* Account Info */}
          <View style={styles.accountInfo}>
            <Text style={styles.accountInfoText}>T√†i kho·∫£n: {user?.email}</Text>
            <Text style={styles.accountInfoText}>Lo·∫°i: {user?.role === "admin" ? "Qu·∫£n tr·ªã vi√™n" : "Kh√°ch h√†ng"}</Text>
          </View>
        </ScrollView>
      </View>
    </SafeAreaView>
  );
}

const styles = StyleSheet.create({
  safeArea: {
    flex: 1,
    backgroundColor: COLORS.background,
  },
  container: {
    flex: 1,
    backgroundColor: COLORS.background,
  },
  header: {
    backgroundColor: COLORS.primary,
    padding: SIZES.padding + 4,
    flexDirection: "row",
    alignItems: "center",
    borderBottomLeftRadius: SIZES.borderRadius + 8,
    borderBottomRightRadius: SIZES.borderRadius + 8,
    shadowColor: "#000",
    shadowOffset: { width: 0, height: 4 },
    shadowOpacity: 0.2,
    shadowRadius: 6,
    elevation: 5,
  },
  backButton: {
    fontSize: SIZES.lg,
    color: COLORS.white,
    fontWeight: "600",
    marginRight: SIZES.padding,
  },
  headerTitle: {
    fontSize: 24,
    fontWeight: "bold",
    color: COLORS.white,
  },
  content: {
    flex: 1,
  },
  section: {
    marginTop: SIZES.padding + 4,
    paddingHorizontal: SIZES.padding,
  },
  sectionTitle: {
    fontSize: SIZES.sm,
    fontWeight: "bold",
    color: COLORS.gray,
    marginBottom: SIZES.padding,
    letterSpacing: 0.5,
  },
  settingItem: {
    flexDirection: "row",
    alignItems: "center",
    justifyContent: "space-between",
    backgroundColor: COLORS.white,
    padding: SIZES.padding + 4,
    borderRadius: SIZES.borderRadius,
    marginBottom: 12,
    borderWidth: 2,
    borderColor: COLORS.border,
    shadowColor: "#000",
    shadowOffset: { width: 0, height: 1 },
    shadowOpacity: 0.05,
    shadowRadius: 2,
    elevation: 1,
  },
  settingLeft: {
    flexDirection: "row",
    alignItems: "center",
    flex: 1,
  },
  settingIcon: {
    fontSize: 24,
    marginRight: SIZES.padding,
  },
  settingText: {
    fontSize: SIZES.md + 1,
    color: COLORS.dark,
    fontWeight: "600",
  },
  settingRight: {
    flexDirection: "row",
    alignItems: "center",
  },
  settingValue: {
    fontSize: SIZES.md,
    color: COLORS.gray,
    marginRight: 8,
  },
  settingArrow: {
    fontSize: 24,
    color: COLORS.gray,
    fontWeight: "300",
  },
  accountInfo: {
    margin: SIZES.padding,
    padding: SIZES.padding + 4,
    backgroundColor: COLORS.light,
    borderRadius: SIZES.borderRadius,
    borderWidth: 1,
    borderColor: COLORS.border,
  },
  accountInfoText: {
    fontSize: SIZES.sm + 1,
    color: COLORS.gray,
    marginVertical: 2,
  },
});
